[build-system]
requires = ["setuptools", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
authors = [{name = "{{ cookiecutter.author }}", email = "{{ cookiecutter.email }}"}]
# This enables the use of automatic versioning with setuptools_scm
dynamic = ["version"]
name = "{{ cookiecutter.project_slug }}"
requires-python = ">=3.10.0"
readme = "README.md"
license = {file = "LICENSE"}
description = "{{ cookiecutter.project_description }}"
dependencies = [
    "codemodder>=0.81.0",
    "libcst~=1.1.0",
    "security==1.2.1",
]
keywords = ["custom", "codemod", "codemods", "security", "fix", "fixes"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development",
    "Topic :: Security",
]

[project.urls]
Homepage = "{{ cookiecutter.project_url }}"
Repository = "{{ cookiecutter.project_repo }}"
Codemodder = "https://codemodder.io"


[project.optional-dependencies]
test = [
    "coverage>=7.3,<7.5",
    "mock==5.1.*",
    "pytest>=7.4,<8.1",
    "pytest-cov~=4.1.0",
    "pytest-mock~=3.12.0",
    "pytest-randomly==3.*",
    "pytest-xdist==3.*",
    "types-mock==5.1.*",
]
[project.entry-points.codemods]
"{{ cookiecutter.project_slug }}" = "{{ cookiecutter.project_slug }}:registry"

[tool.setuptools]

[tool.setuptools.package-data]
"{{ cookiecutter.project_slug }}.docs" = ["src/{{ cookiecutter.project_slug }}/docs/*.md"]

[tool.setuptools_scm]
version_file = "src/{{ cookiecutter.project_slug }}/_version.py"

[tool.pytest.ini_options]
# Ignore integration tests and ci tests by default
testpaths = ["tests"]

[tool.black]
extend-exclude = '''
/(
  tests/samples |
  src/{{ cookiecutter.project_slug }}/_version.py
)/
'''
